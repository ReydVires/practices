{
    "project": {},
    "files": {
        "app.js": {
            "name": "app.js",
            "modules": {
                "APP": 1
            },
            "classes": {
                "APP": 1,
                "Constants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "script.js": {
            "name": "script.js",
            "modules": {},
            "classes": {
                "Main": 1,
                "Aritmetic": 1,
                "Buttons": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "APP": {
            "name": "APP",
            "submodules": {},
            "classes": {
                "APP": 1,
                "Constants": 1,
                "Main": 1,
                "Aritmetic": 1,
                "Buttons": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "script.js",
            "line": 404,
            "description": "Main application module that contains all necessary classes/objects,\nmethods and properties for the Calculator application."
        }
    },
    "classes": {
        "APP": {
            "name": "APP",
            "shortname": "APP",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "APP",
            "namespace": "",
            "file": "app.js",
            "line": 230,
            "description": "Parses string value into decimal floating point number if possible, and then returns the result.",
            "itemtype": "method",
            "return": {
                "description": "Returs the application's name in string format.",
                "type": "String"
            },
            "params": [
                {
                    "name": "String",
                    "description": "describing the namespace of objects separated by a dots.",
                    "type": "String"
                },
                {
                    "name": "And",
                    "description": "object to initialize each of the newly created subobject. If you add a property with all caps it will consider it as a\nconstant and therefore use Constants object to create new constant that cannot be changed using Firebug and console.",
                    "type": "Object"
                }
            ]
        },
        "Constants": {
            "name": "Constants",
            "shortname": "Constants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "APP",
            "namespace": "",
            "file": "app.js",
            "line": 131,
            "description": "Lists all constants with their values in array like format. Useful in JavaScript console.",
            "itemtype": "method",
            "return": {
                "description": "Returs true if new constant is created or false otherwise.",
                "type": "Boolean"
            }
        },
        "Main": {
            "name": "Main",
            "shortname": "Main",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "APP",
            "namespace": "",
            "file": "script.js",
            "line": 1,
            "description": "Main calculator class. Contains all necessary Calculator related properties/methods."
        },
        "Aritmetic": {
            "name": "percent",
            "shortname": "Aritmetic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "APP",
            "namespace": "",
            "file": "script.js",
            "line": 81,
            "description": "Percent method. It needs both \"result\" and display field values to be different than 0 to work. \nTherefore an aritmetic operation must be used before you can calculate percents of a given value. \nExample: Press number 555 and then press the plus(+) sign button. \"result\" operand now has the value of 555\nand the application waits for input for the second operand. Insert value of 33 and then press the percent(%) \nbutton. The application finds there are two available operands so it calculates 33% of 555 which is 183.15 and\nsets the display field to this new percent value. If you press the equal(=) sign button, it will sum up 555 + 183.15 \nwhich is 738.15. This same set of tasks applies to all other binary operations so if we used division(/) instead of \nadtion(+) the final result would be 3.030303 or (555 / (33% of 555)) = (555 / 183.15)",
            "itemtype": "method"
        },
        "Buttons": {
            "name": "pressEqual",
            "shortname": "Buttons",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "APP",
            "namespace": "",
            "file": "script.js",
            "line": 404,
            "description": "pressEqual method (called upon pressing equal(=) button)call calculate() method to do the calculation on \"result\" and \ndigits display value and resets operand to 0 and operation field value to empty string ''.",
            "itemtype": "method",
            "params": [
                {
                    "name": "memoryStr",
                    "description": "string value which can be some these MC, MR, MS, M+, M-"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "app.js",
            "line": 102,
            "todo": [
                "use constMapObject to create new constant key in the given constants map object."
            ],
            "class": "Constants",
            "module": "APP"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type",
            "line": " app.js:102"
        }
    ]
}