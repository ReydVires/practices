<?xml version="1.0"?>
<testsuite name="Firefox 48.0.0 (Ubuntu 0.0.0)" package="" timestamp="2016-10-27T15:51:28" id="0" hostname="asus-vlado" tests="965" errors="0" failures="0" time="8.44">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:48.0) Gecko/20100101 Firefox/48.0"/>
  </properties>
  <testcase name="Enteriror Screen Tests Testing frame width. It must be equal to: cupboardDepth + rearWallWidth + thickness * 2" time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).Enteriror Screen Tests"/>
  <testcase name="defaultSlotDataObject() parts array should be non empty containing preset value of parts (4 is max currently)" time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).defaultSlotDataObject()"/>
  <testcase name="defaultInnerPartsMatrix(maxNumOfInnerShelves, maxNumOfBeams) should return two dimesinal array containing default data slot objects" time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).defaultInnerPartsMatrix(maxNumOfInnerShelves, maxNumOfBeams)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled" time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled   " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled     " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled      " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled       " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled          " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled           " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled             " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled                " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled                 " time="0.014" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled                   " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled                    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled                     " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled                      " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix with ceiling/floor and left wall depending on how they are enabled                       " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix if the given matrix argument is non-truthy or empty array" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix if the given matrix argument is non-truthy or empty array " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix if the given matrix argument is non-truthy or empty array  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix if the given matrix argument is non-truthy or empty array   " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix if the given matrix argument is non-truthy or empty array    " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix if the given matrix argument is non-truthy or empty array     " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix if the given matrix argument is non-truthy or empty array      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="makeInnerPartsMatrix(fcdo, slotMatrix) Should create default matrix if the given matrix argument is non-truthy or empty array       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makeInnerPartsMatrix(fcdo, slotMatrix)"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available      " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available       " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available          " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available               " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available                " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available                   " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs true for horizontal baffle = true, false for horizontal baffle = false or if no part slots ar available                     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBaffleStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available  " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available    " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available         " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available          " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available           " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available               " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available                " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available                 " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available                   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs true for horizontal beam = true, false for horizontal beams = false or if no part slots ar available                     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBaffle(innerPartsSlotMatrix, row, col, numCols) against horzBeamStubs"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params" time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params  " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params    " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params     " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params      " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params       " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params        " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params         " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params           " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params            " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params             " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params              " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params               " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                 " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                  " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                    " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                        " time="0.014" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col) The new matrix should have changed cols as given in the params                           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHorzBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)" time="0.02" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows) " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)  " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)    " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)     " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)       " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)         " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)          " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)            " time="0.014" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForVertBaffle(innerPartsSlotMatrix, row, col) Should return object with row and column and number of rows, from row to (row + numRows)             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForVertBaffle(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available  " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available   " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available       " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available          " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available            " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                 " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                    " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                     " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                      " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                       " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                        " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                           " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                            " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                             " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                 " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                  " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                     " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                        " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                          " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs true for vertical baffle/beam = true, false for vertical baffle/beam = false or if no part slots are available                                           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBaffleStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available   " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available      " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available       " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available         " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available          " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available             " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available              " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available               " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available                " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available                 " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available                  " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available                   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs true for vertical beam = true, false for vertical beam = false or if no part slots ar available                     " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForVertBaffle(innerPartsSlotMatrix, row, col, numRows) against vertBeamStubs stubs"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params" time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params  " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params    " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params     " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params      " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params        " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params          " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params            " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed cols as given in the params             " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchEmptySpaceForHorzBeam(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params" time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params  " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params       " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params        " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params          " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params           " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params            " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params               " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                   " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                     " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                      " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                       " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                        " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                             " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                                " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                                 " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols) The new matrix should have changed rows as given in the params                                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflAbove(innerPartsSlotMatrix, row, col, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params" time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params  " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params   " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params     " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params      " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params       " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params         " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params          " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params           " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params            " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params             " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params              " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params               " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                 " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                   " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                     " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                         " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                          " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                             " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                              " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                 " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                  " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                     " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                       " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols) The new matrix should have changed rows as given in the params                                        " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchHorzBflBelow(innerPartsSlotMatrix, row, col, numRows, numCols)"/>
  <testcase name="slotContainsPart(partsArray, partName) Should return true if a slot contains at least one horizontal baffle and false if none or if horzBaffle key is true" time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).slotContainsPart(partsArray, partName)"/>
  <testcase name="slotContainsPart(partsArray, partName) Should return true if a slot contains at least one horizontal baffle and false if none or if horzBaffle key is true " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).slotContainsPart(partsArray, partName)"/>
  <testcase name="slotContainsPart(partsArray, partName) Should return true if a slot contains at least one horizontal baffle and false if none or if horzBaffle key is true  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).slotContainsPart(partsArray, partName)"/>
  <testcase name="slotContainsPart(partsArray, partName) Should return true if a slot contains at least one horizontal baffle and false if none or if horzBaffle key is true   " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).slotContainsPart(partsArray, partName)"/>
  <testcase name="slotContainsPart(partsArray, partName) Should return true if a slot contains at least one horizontal baffle and false if none or if horzBaffle key is true    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).slotContainsPart(partsArray, partName)"/>
  <testcase name="slotContainsPart(partsArray, partName) Should return true if a slot contains at least one horizontal baffle and false if none or if horzBaffle key is true     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).slotContainsPart(partsArray, partName)"/>
  <testcase name="slotContainsPart(partsArray, partName) Should return true if a slot contains at least one horizontal baffle and false if none or if horzBaffle key is true      " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).slotContainsPart(partsArray, partName)"/>
  <testcase name="isFullSlot(slotObject) Should return true if a slot contains no empty parts i.e all slot parts are filled." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isFullSlot(slotObject)"/>
  <testcase name="isFullSlot(slotObject) Should return true if a slot contains no empty parts i.e all slot parts are filled. " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isFullSlot(slotObject)"/>
  <testcase name="isFullSlot(slotObject) Should return true if a slot contains no empty parts i.e all slot parts are filled.  " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isFullSlot(slotObject)"/>
  <testcase name="isFullSlot(slotObject) Should return true if a slot contains no empty parts i.e all slot parts are filled.   " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isFullSlot(slotObject)"/>
  <testcase name="isFullSlot(slotObject) Should return true if a slot contains no empty parts i.e all slot parts are filled.    " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isFullSlot(slotObject)"/>
  <testcase name="isFullSlot(slotObject) Should return true if a slot contains no empty parts i.e all slot parts are filled.     " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isFullSlot(slotObject)"/>
  <testcase name="isEmptySlot(parts) Should return true if a slot contains no parts i.e all slot parts are empty." time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isEmptySlot(parts)"/>
  <testcase name="isEmptySlot(parts) Should return true if a slot contains no parts i.e all slot parts are empty. " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isEmptySlot(parts)"/>
  <testcase name="isEmptySlot(parts) Should return true if a slot contains no parts i.e all slot parts are empty.  " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isEmptySlot(parts)"/>
  <testcase name="isEmptySlot(parts) Should return true if a slot contains no parts i.e all slot parts are empty.   " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isEmptySlot(parts)"/>
  <testcase name="isEmptySlot(parts) Should return true if a slot contains no parts i.e all slot parts are empty.    " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isEmptySlot(parts)"/>
  <testcase name="isEmptySlot(parts) Should return true if a slot contains no parts i.e all slot parts are empty.     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isEmptySlot(parts)"/>
  <testcase name="makePartsArray(partsCount, partType) Should return array containing given number of elements with the specified part type" time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makePartsArray(partsCount, partType)"/>
  <testcase name="makePartsArray(partsCount, partType) Should return array containing given number of elements with the specified part type " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makePartsArray(partsCount, partType)"/>
  <testcase name="makePartsArray(partsCount, partType) Should return array containing given number of elements with the specified part type  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makePartsArray(partsCount, partType)"/>
  <testcase name="makePartsArray(partsCount, partType) Should return array containing given number of elements with the specified part type   " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).makePartsArray(partsCount, partType)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}" time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols} " time="0.013" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}   " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}      " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}        " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}          " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}           " time="0.014" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}            " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}             " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}              " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}               " time="0.777" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                 " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                  " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                   " time="0.018" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                    " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                     " time="0.016" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                      " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                       " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                        " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                         " time="0.019" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col) Should return object of shape: {row, col, numCols}                          " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForTieShoesTrouser(innerPartsSlotMatrix, row, col)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object." time="0.023" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object. " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.   " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.    " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.     " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.       " time="0.014" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.        " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="addPart(slotObject, partType) Should return false if the slot is full or if EMPTY_SLOT_KEY is sent. Otherwise object with containing part inside &quot;parts&quot; array. If part is already contained, it returns the same object.          " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addPart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array." time="0.019" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array. " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array.  " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array.   " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array.    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array.     " time="0.017" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array.      " time="0.019" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array.       " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array.        " time="0.017" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="removePart(slotObject, partType) Should return false if the slot is empty or if the element is not contained or if EMPTY_SLOT_KEY is sent. Otherwise array with containing part removed from &quot;parts&quot; array.         " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).removePart(slotObject, partType)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor" time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor  " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor   " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor    " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor     " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor      " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor       " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor        " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor         " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor          " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor           " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor            " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor             " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor              " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor               " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                 " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                  " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                     " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                      " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                       " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                        " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                         " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                          " time="0.015" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                           " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                            " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                             " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                              " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                               " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                 " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                   " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                    " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                     " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                       " time="0.015" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                        " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                         " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                          " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                           " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                            " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                             " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                              " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                               " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                  " time="0.013" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                    " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                     " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                      " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                       " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                        " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                           " time="0.59" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                             " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                              " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                               " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                 " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                  " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                    " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                     " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                      " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                       " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                        " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                         " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                          " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                            " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                             " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                              " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                               " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                 " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                   " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                    " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                     " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                      " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                       " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                        " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                         " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                          " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                           " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                            " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                             " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                              " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                               " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                                " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                                 " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                                  " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows) Should return index of the first slot that contains vertical baffle left from the current slot below the mouse cursor                                                                                                   " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflLeft(innerPartsSlotMatrix, row, col, numRows)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor  " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor    " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor     " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor      " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor       " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor        " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor         " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor          " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor           " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor            " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor             " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor              " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor               " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                  " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                   " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                    " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                     " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                      " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                       " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                        " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                         " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                          " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                               " time="0.015" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                 " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                    " time="0.018" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                      " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                         " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                          " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                              " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                               " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                     " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                      " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                       " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                         " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                          " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                           " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                            " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                      " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                         " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                          " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                           " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                             " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                              " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                               " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                  " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                    " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                     " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                         " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                          " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                            " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                                " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                                   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                                    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                                     " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn) Should return index of the first slot that contains vertical baffle right from the current slot below the mouse cursor                                                                                                       " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchVertBflRight(innerPartsSlotMatrix, row, col, numRows, numCols, rightWallOn)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls" time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls  " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls     " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls        " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls         " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls          " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls            " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls             " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls              " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls               " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls                " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls                  " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls                   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls                    " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls                     " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls                      " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="searchRangeForHanger(innerPartsSlotMatrix, row, col) Searches column range for hanger. It is not dependent or left/right walls                       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).searchRangeForHanger(innerPartsSlotMatrix, row, col)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above." time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above. " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.    " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HorzBaffleStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above." time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above. " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.  " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.   " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.    " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.     " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.      " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.       " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.         " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.          " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.           " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.              " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.               " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                 " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                    " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                     " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                      " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                       " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                        " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                            " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                             " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                              " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                               " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                 " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                  " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                   " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                    " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                     " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                      " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                       " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight) Determines wheter the hanger will be drawn or not. Must have horizontal baffle above.                                           " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).HangerStubs - searchEmptySpaceForHanger(innerPartsSlotMatrix, row, col, numCols, leftWallOn, rightWallOn, partWidth, partHeight)"/>
  <testcase name="addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY emptyMatrix_rows2_cols2, topRow_AllAccess_maxNumShelves2_maxNumOfBeams2" time="0.602" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY"/>
  <testcase name="addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY emptyMatrix_rows2_cols2, bottomRow_AllAccess_maxNumShelves2_maxNumOfBeams2" time="0.562" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY"/>
  <testcase name="addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY emptyMatrix_rows6_cols6, stairsTD_AllAccess_maxNumShelves6_maxNumOfBeams6" time="0.544" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY"/>
  <testcase name="addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY emptyMatrix_rows6_cols6, stairsBU_AllAccess_maxNumShelves6_maxNumOfBeams6" time="0.541" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY"/>
  <testcase name="addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY emptyMatrix_rows6_cols6, square_AllAccess_maxNumShelves6_maxNumOfBeams6" time="0.537" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY"/>
  <testcase name="addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY emptyMatrix_rows6_cols6, twoRects_AllAccess_maxNumShelves6_maxNumOfBeams6" time="0.722" classname="Firefox_48_0_0_(Ubuntu_0_0_0).addAreaOfParts(slotObject, partType) - Fills the matrix with specific part in a given area, partType = HORZ_BAFFLE_KEY"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth" time="0.024" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth  " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth   " time="0.016" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth    " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth     " time="0.016" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth      " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth       " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth         " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth          " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth            " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth             " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth              " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth               " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                 " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                   " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                     " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                      " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                       " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                         " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                          " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                             " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                              " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                 " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                     " time="0.015" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                      " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                       " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                         " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                          " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                            " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                             " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                              " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                               " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                 " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                  " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                   " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                     " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                      " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                       " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                         " time="0.014" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                          " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                            " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                             " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                              " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                               " time="0.018" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                 " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                    " time="0.014" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                     " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                       " time="0.02" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                        " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="preProcessData(fcdo, shelveCssColor, millsPerPixel) fcdo object must contain all form fields and maxNumOfShelves, maxNumOfInnerShelves, maxNumOfBeams, fullWidth, thicknessPx, fullWidthPx, cupboardWidthPx, cupboardHeightPx, cupboardDepthPx, leftShelveWidthPx, rightShelveWidthPx, frameX, frameY, borderSize, currentMaterialColor, currentDarkerMatColor, currentEdgeColor, shelveShiftFactor, innerShelveSlotHeight, innerShelveSlotWidth                                                                         " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).preProcessData(fcdo, shelveCssColor, millsPerPixel)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}" time="0.013" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false} " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}       " time="0.013" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="shelveSlotObject(x, y, shiftX, shiftY, busy) should return object of the form: {x: Number, y: Number, shiftX: Number, shiftY: Number, busy: true/false}          " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).shelveSlotObject(x, y, shiftX, shiftY, busy)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols." time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols. " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.   " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.     " time="0.021" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.      " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColSet(rowOrCol, numOfRowsOrCols) Should return an array of indexes starting with rowOrCol sequentially to numOfRowsOrCols.          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColSet(rowOrCol, numOfRowsOrCols)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols." time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols. " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.    " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue) Should return number of max. value of rows/columns or number of rows/columns until numOfRowsOrCols.          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMax(rowOrCol, numOfRowsOrCols, maxValue)"/>
  <testcase name="rowOrColShiftMin(rowOrCol, minValue) Should return number of min. value of rows/columns or number of rows/columns until zero." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMin(rowOrCol, minValue)"/>
  <testcase name="rowOrColShiftMin(rowOrCol, minValue) Should return number of min. value of rows/columns or number of rows/columns until zero. " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMin(rowOrCol, minValue)"/>
  <testcase name="rowOrColShiftMin(rowOrCol, minValue) Should return number of min. value of rows/columns or number of rows/columns until zero.  " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMin(rowOrCol, minValue)"/>
  <testcase name="rowOrColShiftMin(rowOrCol, minValue) Should return number of min. value of rows/columns or number of rows/columns until zero.   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMin(rowOrCol, minValue)"/>
  <testcase name="rowOrColShiftMin(rowOrCol, minValue) Should return number of min. value of rows/columns or number of rows/columns until zero.    " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMin(rowOrCol, minValue)"/>
  <testcase name="rowOrColShiftMin(rowOrCol, minValue) Should return number of min. value of rows/columns or number of rows/columns until zero.     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMin(rowOrCol, minValue)"/>
  <testcase name="rowOrColShiftMin(rowOrCol, minValue) Should return number of min. value of rows/columns or number of rows/columns until zero.      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).rowOrColShiftMin(rowOrCol, minValue)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange) " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)    " time="0.013" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)       " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)          " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)             " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)              " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)                " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)                  " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="zeroBasedRange(value, minRange, maxRange) should return minRange for lower value, maxRange - 1 for above value and given value if in range (minRange &lt;= value &lt; maxRange)                   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).zeroBasedRange(value, minRange, maxRange)"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING      " time="0.013" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING          " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING           " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING            " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING             " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING              " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).bubleSort(array, sortType), -1 is ASCENDING, 1 is DESCENDING"/>
  <testcase name="convertTwoDimIndexesToOneDimIndex(cols, currentRow, currentCol) should convert two-dim array index [i][j] to one-dim array index [k]" time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).convertTwoDimIndexesToOneDimIndex(cols, currentRow, currentCol)"/>
  <testcase name="convertTwoDimIndexesToOneDimIndex(cols, currentRow, currentCol) should convert two-dim array index [i][j] to one-dim array index [k] " time="0.015" classname="Firefox_48_0_0_(Ubuntu_0_0_0).convertTwoDimIndexesToOneDimIndex(cols, currentRow, currentCol)"/>
  <testcase name="convertTwoDimIndexesToOneDimIndex(cols, currentRow, currentCol) should convert two-dim array index [i][j] to one-dim array index [k]  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).convertTwoDimIndexesToOneDimIndex(cols, currentRow, currentCol)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7)" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7) " time="0.007" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7)  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7)   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7)    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7)     " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7)      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7)       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel(min = 7, max = 10, default = 7)        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16)" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16) " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16)  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16)   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16)    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16)     " time="0.014" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16)      " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16)       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Mills per Pixel for Depth(min = 16, max = 20, default = 16)        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000)" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000) " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000)  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000)   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000)    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000)     " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000)      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000)       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Width(min = 700, max = 5000, default = 3000)        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500)" time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500) " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500)  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500)   " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500)    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500)     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500)      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500)       " time="0.009" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Height(min = 1000, max = 3000, default = 2500)        " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700)" time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700) " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700)  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700)   " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700)    " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700)     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700)      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700)       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Cupboard Depth(min = 500, max = 1000, default = 700)        " time="0.008" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250)" time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250) " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250)  " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250)   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250)    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250)     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250)      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250)       " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Left Shelve Width(min = 150, max = 500, default = 250)        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250)" time="0.013" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250) " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250)  " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250)   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250)    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250)     " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250)      " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250)       " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Right Shelve Width(min = 150, max = 500, default = 250)        " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30)" time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30) " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30)  " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30)   " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30)    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30)     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30)      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30)       " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="validateNumericFrnData(dataType, value) Thickness(min = 5, max = 50, default = 30)        " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).validateNumericFrnData(dataType, value)"/>
  <testcase name="isTruthy(value) function value = true" time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTruthy(value) function"/>
  <testcase name="isTruthy(value) function " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTruthy(value) function"/>
  <testcase name="isTruthy(value) function  " time="0.006" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTruthy(value) function"/>
  <testcase name="isTruthy(value) function   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTruthy(value) function"/>
  <testcase name="isTruthy(value) function    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTruthy(value) function"/>
  <testcase name="isTruthy(value) function     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTruthy(value) function"/>
  <testcase name="isTruthy(value) function      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTruthy(value) function"/>
  <testcase name="getRGBHexValue(hashString, length) Returns string which contains only alpha-numeric chars of the given length. Spec. chars are avoided and chars above the length are ommited." time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getRGBHexValue(hashString, length)"/>
  <testcase name="getRGBHexValue(hashString, length) Returns string which contains only alpha-numeric chars of the given length. Spec. chars are avoided and chars above the length are ommited. " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getRGBHexValue(hashString, length)"/>
  <testcase name="getRGBHexValue(hashString, length) Returns string which contains only alpha-numeric chars of the given length. Spec. chars are avoided and chars above the length are ommited.  " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getRGBHexValue(hashString, length)"/>
  <testcase name="getRGBHexValue(hashString, length) Returns string which contains only alpha-numeric chars of the given length. Spec. chars are avoided and chars above the length are ommited.   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getRGBHexValue(hashString, length)"/>
  <testcase name="getRGBHexValue(hashString, length) Returns string which contains only alpha-numeric chars of the given length. Spec. chars are avoided and chars above the length are ommited.    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getRGBHexValue(hashString, length)"/>
  <testcase name="getRGBHexValue(hashString, length) Returns string which contains only alpha-numeric chars of the given length. Spec. chars are avoided and chars above the length are ommited.     " time="0.012" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getRGBHexValue(hashString, length)"/>
  <testcase name="getRGBHexValue(hashString, length) Returns string which contains only alpha-numeric chars of the given length. Spec. chars are avoided and chars above the length are ommited.      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getRGBHexValue(hashString, length)"/>
  <testcase name="getRGBHexValue(hashString, length) Returns string which contains only alpha-numeric chars of the given length. Spec. chars are avoided and chars above the length are ommited.       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getRGBHexValue(hashString, length)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value    " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value     " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value       " time="0.004" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value          " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value            " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value             " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value              " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value                " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value                 " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value                  " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value                   " time="0.011" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value                    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value                     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getDarkerHexColor(rgbString, prcnt) Should calculate hex/decimal value out of CSS value                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerHexColor(rgbString, prcnt)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value  " time="0.01" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value   " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value    " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value     " time="0.005" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value        " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value         " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value          " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value           " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value            " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value             " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value              " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value               " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value                " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value                 " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value                  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value                   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value                    " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value                     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value                      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getHexColor(hashString) Should calculate hex value out of CSS value                       " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getHexColor(hashString)"/>
  <testcase name="getColor(colorType, hashColor) Should calculate hex value out of CSS value " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getColor(colorType, hashColor)"/>
  <testcase name="getColor(colorType, hashColor) Should calculate hex value out of CSS value  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getColor(colorType, hashColor)"/>
  <testcase name="getColor(colorType, hashColor) Should calculate hex value out of CSS value   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getColor(colorType, hashColor)"/>
  <testcase name="getColor(colorType, hashColor) Should calculate hex value out of CSS value    " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getColor(colorType, hashColor)"/>
  <testcase name="getColor(colorType, hashColor) Should calculate hex value out of CSS value     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getColor(colorType, hashColor)"/>
  <testcase name="getColor(colorType, hashColor) Should calculate hex value out of CSS value      " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getColor(colorType, hashColor)"/>
  <testcase name="getColor(colorType, hashColor) Should calculate hex value out of CSS value       " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getColor(colorType, hashColor)"/>
  <testcase name="getDarkerStringColor(rgbString, prcnt) Should return string representation of the given percent darker color" time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerStringColor(rgbString, prcnt)"/>
  <testcase name="getDarkerStringColor(rgbString, prcnt) Should return string representation of the given percent darker color " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerStringColor(rgbString, prcnt)"/>
  <testcase name="getDarkerStringColor(rgbString, prcnt) Should return string representation of the given percent darker color  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerStringColor(rgbString, prcnt)"/>
  <testcase name="getDarkerStringColor(rgbString, prcnt) Should return string representation of the given percent darker color   " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerStringColor(rgbString, prcnt)"/>
  <testcase name="getDarkerStringColor(rgbString, prcnt) Should return string representation of the given percent darker color    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).getDarkerStringColor(rgbString, prcnt)"/>
  <testcase name="decimalRound(value, exp) Returns decimal round to the given " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).decimalRound(value, exp)"/>
  <testcase name="decimalRound(value, exp) Returns decimal round to the given  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).decimalRound(value, exp)"/>
  <testcase name="decimalFloor(value, exp) Returns decimal round to the given " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).decimalFloor(value, exp)"/>
  <testcase name="decimalCeil(value, exp) Returns decimal round to the given " time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).decimalCeil(value, exp)"/>
  <testcase name="isTopCornerShelvesDrawn(lowerYBound, upperYBound, y) y is equal to lowerYBound. (lowerYBound &lt;=  y &lt; upperYbound). expected = true." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTopCornerShelvesDrawn(lowerYBound, upperYBound, y)"/>
  <testcase name="isTopCornerShelvesDrawn(lowerYBound, upperYBound, y) y is equal to upperYBound. (lowerYBound &lt;=  y &lt; upperYbound). expected = false." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTopCornerShelvesDrawn(lowerYBound, upperYBound, y)"/>
  <testcase name="isTopCornerShelvesDrawn(lowerYBound, upperYBound, y) y is lower than lowerYBound. (lowerYBound &lt;=  y &lt; upperYbound). expected = false." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTopCornerShelvesDrawn(lowerYBound, upperYBound, y)"/>
  <testcase name="isTopCornerShelvesDrawn(lowerYBound, upperYBound, y) y is between lowerYBound and upperYBound. (lowerYBound &lt;=  y &lt; upperYbound). expected = true." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isTopCornerShelvesDrawn(lowerYBound, upperYBound, y)"/>
  <testcase name="isRectShelveDrawn(midPoint, y) y is equal to midPoint. (midPoint ==  y). expected = true." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isRectShelveDrawn(midPoint, y)"/>
  <testcase name="isRectShelveDrawn(midPoint, y) y is not equal to midPoint. (midPoint !=  y). expected = false." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isRectShelveDrawn(midPoint, y)"/>
  <testcase name="isBottomCornerShelvesDrawn(lowerYBound, upperYBound, y) y equal to lowerYBound. (lowerYBound &lt;  y &lt;= upperYbound). expected = false." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isBottomCornerShelvesDrawn(lowerYBound, upperYBound, y)"/>
  <testcase name="isBottomCornerShelvesDrawn(lowerYBound, upperYBound, y) y equal to upperYBound. (lowerYBound &lt;  y &lt;= upperYbound). expected = true." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isBottomCornerShelvesDrawn(lowerYBound, upperYBound, y)"/>
  <testcase name="isBottomCornerShelvesDrawn(lowerYBound, upperYBound, y) y is between lowerYBound and upperYBound. (lowerYBound &lt;  y &lt;= upperYbound). expected = true." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isBottomCornerShelvesDrawn(lowerYBound, upperYBound, y)"/>
  <testcase name="isBottomCornerShelvesDrawn(lowerYBound, upperYBound, y) y is bigger than upperYBound. (lowerYBound &lt;  y &lt;= upperYbound). expected = false." time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).isBottomCornerShelvesDrawn(lowerYBound, upperYBound, y)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given  " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given     " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given        " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="percentToSample(percent, sum) Returns decimal round to the given         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).percentToSample(percent, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given  " time="0.003" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given   " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given    " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given     " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given      " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given       " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given        " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="sampleToPercent(sample, sum) Returns decimal round to the given         " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).sampleToPercent(sample, sum)"/>
  <testcase name="Testing Parameterized.js plugin test sum(a, b)" time="0.002" classname="Firefox_48_0_0_(Ubuntu_0_0_0).Testing Parameterized.js plugin"/>
  <testcase name="Testing Parameterized.js plugin test sum(a, b) " time="0.001" classname="Firefox_48_0_0_(Ubuntu_0_0_0).Testing Parameterized.js plugin"/>
  <testcase name="Testing Parameterized.js plugin test sum(a, b)  " time="0" classname="Firefox_48_0_0_(Ubuntu_0_0_0).Testing Parameterized.js plugin"/>
  <system-out>
    <![CDATA[Chrome 41.0.2272 (Linux 0.0.0) LOG: null
,Chrome 41.0.2272 (Linux 0.0.0) LOG: Object{millsPerPixel: 7, millsPerPixelForDepth: 16, cupboardWidth: 2500, cupboardHeight: 2500, cupboardDepth: 700, leftShelveWidth: 250, rightShelveWidth: 250, thickness: 30, floorChkBox: true, ceilingChkBox: true, leftShelveChkBox: true, rightShelveChkBox: true, rearChkBox: true, standLeftChkBox: true, standRightChkBox: true, standChkBox: true, shelveCssColor: '#3d6990', fullWidth: 3000, maxNumOfShelves: 25, maxNumOfInnerShelves: 25, maxNumOfBeams: 25}
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: null
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: Object{millsPerPixel: 7, millsPerPixelForDepth: 16, cupboardWidth: 2500, cupboardHeight: 2500, cupboardDepth: 700, leftShelveWidth: 250, rightShelveWidth: 250, thickness: 30, floorChkBox: true, ceilingChkBox: true, leftShelveChkBox: true, rightShelveChkBox: true, rearChkBox: true, standLeftChkBox: true, standRightChkBox: true, standChkBox: true, shelveCssColor: '#3d6990', fullWidth: 3000, maxNumOfShelves: 25, maxNumOfInnerShelves: 25, maxNumOfBeams: 25}
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: Object{millsPerPixel: 7, millsPerPixelForDepth: 16, cupboardWidth: 2500, cupboardHeight: 2500, cupboardDepth: 700, leftShelveWidth: 250, rightShelveWidth: 250, thickness: 30, floorChkBox: true, ceilingChkBox: true, leftShelveChkBox: true, rightShelveChkBox: true, rearChkBox: true, standLeftChkBox: true, standRightChkBox: true, standChkBox: true, shelveCssColor: '#3d6990', fullWidth: 3000, maxNumOfShelves: 25, maxNumOfInnerShelves: 25, maxNumOfBeams: 25}
,Chrome 41.0.2272 (Linux 0.0.0) LOG: 'test: 6, '
,Chrome 41.0.2272 (Linux 0.0.0) LOG: 'test: 7, '
,Chrome 41.0.2272 (Linux 0.0.0) LOG: 'test: 8, '
,Chrome 41.0.2272 (Linux 0.0.0) LOG: 'test: 9, '
,Chrome 41.0.2272 (Linux 0.0.0) LOG: 'test: 10, '
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: Object{millsPerPixel: 7, millsPerPixelForDepth: 16, cupboardWidth: 2500, cupboardHeight: 2500, cupboardDepth: 700, leftShelveWidth: 250, rightShelveWidth: 250, thickness: 30, floorChkBox: true, ceilingChkBox: true, leftShelveChkBox: true, rightShelveChkBox: true, rearChkBox: true, standLeftChkBox: true, standRightChkBox: true, standChkBox: true, shelveCssColor: '#3d6990', fullWidth: 3000, maxNumOfShelves: 25, maxNumOfInnerShelves: 25, maxNumOfBeams: 25}
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'test: 6, '
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'test: 7, '
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'test: 8, '
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'test: 9, '
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'test: 10, '
,Chrome 41.0.2272 (Linux 0.0.0) LOG: 'hello vlade'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Chrome 41.0.2272 (Linux 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: 'test: 6, '
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: 'test: 7, '
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: 'test: 8, '
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: 'test: 9, '
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: 'test: 10, '
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'hello vlade'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: 'hello vlade'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'
,Firefox 48.0.0 (Ubuntu 0.0.0) LOG: '#3d6990'

]]>
  </system-out>
  <system-err/>
</testsuite>