describe("KontrolniStrukturi.js", function () {    var zadachi = window.Zadachi,        rks = zadachi.KontrolniStrukturi.RedoslendaKontrolnaStruktura;    describe("kvadrat(n) = n * n", function () {                it("presmetiva kvadrat na daden cel broj(2, -2), negativen ili pozitiven", function () {            expect(rks.kvadrat(2)).toEqual(4);            expect(rks.kvadrat(-2)).toEqual(4);        });                it("presmetiva kvadrat na daden droben broj(32.49, -32.49), negativen ili pozitiven", function () {            expect(rks.kvadrat(32.49)).toEqual(1055.6001);            expect(rks.kvadrat(-32.49)).toEqual(1055.6001);        });    });        describe("kub(n) = n * n * n", function () {        it("premetuva kub na daden cel broj(2, -2), pozitiven ili negativen", function () {            expect(rks.kub(2)).toEqual(8);            expect(rks.kub(-2)).toEqual(-8);        });                it("presmetiva kub na daden droben broj(32.49, -32.49), negativen ili pozitiven", function () {            expect(rks.kub(32.49)).toEqual(34296.447249000004);            expect(rks.kub(-32.49)).toEqual(-34296.447249000004);        });    });        describe("dolzhinaNaKruzhnica(radius) presmetuva dolzhina na kruzhica", function () {        it("dolzhinaNaKruzhnica(2) = 12.566370614359172", function () {            expect(rks.dolzhinaNaKruzhnica(2)).toEqual(12.566370614359172);        });                it("dolzhinaNaKruzhnica(-2) treba da frli iskluchok IskBrojPomalOnNula", function () {            expect(function () {rks.dolzhinaNaKruzhnica(-2)}).toThrow(new zadachi.Iskluchoci.IskBrojPomalOnNula());        });            });        describe("zbirOdDva(a, b) presmetuva zbir na a i b", function () {        it("zbirOdDva(2, 3) = 5", function () {            expect(rks.zbirOdDva(2, 3)).toEqual(5);        });                it("zbirOdDva(2, -3) = -1", function () {            expect(rks.zbirOdDva(2, -3)).toEqual(-1);        });                it("zbirOdDva(3, 1) = 4", function () {            expect(rks.zbirOdDva(3, 1)).toEqual(4);        });                it("zbirOdDva(3, -1) = 2", function () {            expect(rks.zbirOdDva(3, -1)).toEqual(2);        });                it("zbirOdDva(2.5, 3.5) = 6", function () {            expect(rks.zbirOdDva(2.5, 3.5)).toEqual(6);        });        it("zbirOdDva(2.5, -3.5) = -1", function () {            expect(rks.zbirOdDva(2.5, -3.5)).toEqual(-1);        });    });        describe("razlikaOdDva(a, b) presmetuva razlika na a i b", function () {        it("razlikaOdDva(2, 3) = -1", function () {            expect(rks.razlikaOdDva(2, 3)).toEqual(-1);        });                it("razlikaOdDva(2, -3) = -5", function () {            expect(rks.razlikaOdDva(2, -3)).toEqual(5);        });                it("razlikaOdDva(3, 1) = 2", function () {            expect(rks.razlikaOdDva(3, 1)).toEqual(2);        });                it("razlikaOdDva(3, -1) = 4", function () {            expect(rks.razlikaOdDva(3, -1)).toEqual(4);        });                it("razlikaOdDva(2.5, 3.5) = -1", function () {            expect(rks.razlikaOdDva(2.5, 3.5)).toEqual(-1);        });        it("razlikaOdDva(2.5, -3.5) = 6", function () {            expect(rks.razlikaOdDva(2.5, -3.5)).toEqual(6);        });    });        describe("proizvodOdDva(a, b) presmetuva proizvod na a i b", function () {        it("proizvodOdDva(2, 3) = 6", function () {            expect(rks.proizvodOdDva(2, 3)).toEqual(6);        });                it("proizvodOdDva(2, -3) = -6", function () {            expect(rks.proizvodOdDva(2, -3)).toEqual(-6);        });                it("proizvodOdDva(-3, 4) = -12", function () {            expect(rks.proizvodOdDva(-3, 4)).toEqual(-12);        });                it("proizvodOdDva(-3, -4) = 4", function () {            expect(rks.proizvodOdDva(-3, -4)).toEqual(12);        });    });        describe("kolichnikOdDva(a, b) presmetuva kolichnik na a i b", function () {        it("kolichnikOdDva(6, 3) = 2", function () {            expect(rks.kolichnikOdDva(6, 3)).toEqual(2);        });                it("kolichnikOdDva(-6, 3) = -2", function () {            expect(rks.kolichnikOdDva(-6, 3)).toEqual(-2);        });                it("kolichnikOdDva(6, -3) = -2", function () {            expect(rks.kolichnikOdDva(6, -3)).toEqual(-2);        });                it("kolichnikOdDva(-6, -3) = 2", function () {            expect(rks.kolichnikOdDva(-6, -3)).toEqual(2);        });                it("kolichnikOdDva(3, 2) = 1.5", function () {            expect(rks.kolichnikOdDva(3, 2)).toEqual(1.5);        });                it("kolichnikOdDva(1, 2) = 0.5", function () {            expect(rks.kolichnikOdDva(1, 2)).toEqual(0.5);        });                it("kolichnikOdDva(0, 2) = 0", function () {            expect(rks.kolichnikOdDva(0, 2)).toEqual(0);        });                it("kolichnikOdDva(3, 0) treba da frli iskluchok IskDelenjeSoNula", function () {            expect(rks.kolichnikOdDva(3, 0)).toEqual(Infinity);        });    });    describe("srednaCifraTricifrenBroj(broj) ja vrakja srednata cifra na daden tricifren broj", function () {        it("srednaCifraTricifrenBroj(345) = 4", function () {            expect(rks.srednaCifraTricifrenBroj(345)).toEqual(4);        });        it("Probaj za negativen tricifren broj, srednaCifraTricifrenBroj(-345) = 4", function () {            expect(rks.srednaCifraTricifrenBroj(-345)).toEqual(4);        });        it("Probaj za tricifren broj so droben del, srednaCifraTricifrenBroj(345.23) = 4", function () {            expect(rks.srednaCifraTricifrenBroj(345.23)).toEqual(4);        });        it("Probaj za negativen tricifren broj so droben del, srednaCifraTricifrenBroj(-345.23) = 4", function () {            expect(rks.srednaCifraTricifrenBroj(-345.23)).toEqual(4);        });        it("Probaj za broevi pogolemi od 999, srednaCifraTricifrenBroj(2345) treba da frli iskluchok IskBrojotNeETricifren", function () {            expect(function () {rks.srednaCifraTricifrenBroj(2345)}).toThrow(new zadachi.Iskluchoci.IskBrojotNeETricifren());        });        it("Probaj za broevi pomali od 100, srednaCifraTricifrenBroj(12) treba da frli iskluchok IskBrojotNeETricifren", function () {            expect(function () {rks.srednaCifraTricifrenBroj(12)}).toThrow(new zadachi.Iskluchoci.IskBrojotNeETricifren());        });    });    describe("zbirNaSredniCifri(a, b) go vrakja zbirot na srednite cifri na a i b. Pritoa mora a i b da se tricifreni broevi.", function () {        it("zbirNaSredniCifri(345, 869) = 10", function () {            expect(rks.zbirNaSredniCifri(345, 869)).toEqual(10);        });        it("zbirNaSredniCifri(-100, 999) = 9. Negativniot kje se pretvori vo pozitivne ekvivalent.", function () {            expect(rks.zbirNaSredniCifri(-100, 999)).toEqual(9);        });        it("zbirNaSredniCifri(100, -999) = 9. Negativniot kje se pretvori vo pozitivne ekvivalent.", function () {            expect(rks.zbirNaSredniCifri(100, -999)).toEqual(9);        });        it("zbirNaSredniCifri(-100, -999) = 9. Negativniot kje se pretvori vo pozitivne ekvivalent.", function () {            expect(rks.zbirNaSredniCifri(-100, -999)).toEqual(9);        });        it("zbirNaSredniCifri(345.9, 869) = 10. Drobniot del kje se skrati", function () {            expect(rks.zbirNaSredniCifri(345.9, 869)).toEqual(10);        });        it("zbirNaSredniCifri(345, 869.9478) = 10. Drobniot del kje se skrati", function () {            expect(rks.zbirNaSredniCifri(345, 869.9478)).toEqual(10);        });        it("zbirNaSredniCifri(345.9, 869.478) = 10. Drobniot del kje se skrati", function () {            expect(rks.zbirNaSredniCifri(345.9, 869.478)).toEqual(10);        });        it("zbirNaSredniCifri(5784, 869) treba da frli iskluchok IskEdenOdBroeviteNeETricifren", function () {            expect(function () { rks.zbirNaSredniCifri(5784, 869); }).toThrow(new zadachi.Iskluchoci.IskEdenOdBroeviteNeETricifren());        });        it("zbirNaSredniCifri(245, 84893) treba da frli iskluchok IskEdenOdBroeviteNeETricifren", function () {            expect(function () { rks.zbirNaSredniCifri(245, 84893); }).toThrow(new zadachi.Iskluchoci.IskEdenOdBroeviteNeETricifren());        });        it("zbirNaSredniCifri(3499, 84893) treba da frli iskluchok IskEdenOdBroeviteNeETricifren", function () {            expect(function () { rks.zbirNaSredniCifri(3499, 84893); }).toThrow(new zadachi.Iskluchoci.IskEdenOdBroeviteNeETricifren());        });        it("zbirNaSredniCifri(99, 84) treba da frli iskluchok IskEdenOdBroeviteNeETricifren", function () {            expect(function () { rks.zbirNaSredniCifri(99, 84); }).toThrow(new zadachi.Iskluchoci.IskEdenOdBroeviteNeETricifren());        });                it("zbirNaSredniCifri(123, 15) treba da frli iskluchok IskEdenOdBroeviteNeETricifren", function () {            expect(function () { rks.zbirNaSredniCifri(123, 15); }).toThrow(new zadachi.Iskluchoci.IskEdenOdBroeviteNeETricifren());        });        it("zbirNaSredniCifri(45, 758) treba da frli iskluchok IskEdenOdBroeviteNeETricifren", function () {            expect(function () { rks.zbirNaSredniCifri(45, 758); }).toThrow(new zadachi.Iskluchoci.IskEdenOdBroeviteNeETricifren());        });    });    describe("rastojanieDve3DTochki(x1, y1, z1, x2, y2, z2) go vrakja rastojanieto megju dve tochki vo 3D prostor.", function () {        it("rastojanieDve3DTochki(1, 2, 3, 4, 5, 6) da e priblizhno 5.1961524227066", function () {            expect(rks.rastojanieDve3DTochki(1, 2, 3, 4, 5, 6)).toBeCloseTo(5.1961524227066, 13);        });        it("rastojanieDve3DTochki(5, 0, 0, 0, 0, 0) da e ednakvo 5", function () {            expect(rks.rastojanieDve3DTochki(5, 0, 0, 0, 0, 0)).toEqual(5);        });    });    describe("sistemRavenkiSoDveNepoznati(a, b, c, d, e, f, g) go vrakja reshenieto na sistem od dve ravenki, ax + by = c i ex + fy = g", function () {        it("sistemRavenkiSoDveNepoznati(1, 2, 3, 4, 5, 6) treba da e {-1, 2}", function () {            expect(rks.sistemRavenkiSoDveNepoznati(1, 2, 3, 4, 5, 6)).toEqual({x: -1, y: 2});        });    });    xdescribe("vnesiCelBrojSoKopchinja(event) raboti so tastarura", function () {        it("vnesiCelBrojSoKopchinja(1, 2, 3, 4, 5, 6) treba da e {-1, 2}", function () {            expect(rks.vnesiCelBrojSoKopchinja(1, 2, 3, 4, 5, 6)).toEqual({x: -1, y: 2});        });    });    });