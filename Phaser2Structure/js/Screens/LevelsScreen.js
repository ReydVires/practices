window.MyGame.namespace('LevelsScreen', window.MyGame.Screen, (function (windowObj, game) {'use strict';    var background = null,	gameObject = null,        thisObject = null,        mainMenuButton = null,        scoreBorder = null,        scoreText = null,        levelsTitle = null,        muteOnOffButton = null,        levelPointsBorder = null,        levelPointText = null,        submitButton = null,        saveButton = null,        savedText = null,        resetButton = null,        resetWindow = null,        resetGameButton = null,        cancelButton = null;    return {        init: function () {            thisObject = this;            gameObject = game.gameObject;            googleApiObject = googleApi;            thisObject.screenObjects = gameObject.add.group();            boxes = [];        },        create: function () {            background = gameObject.add.sprite(0, 0, game.ImageAssetKeys.GUIDES_AND_BACKGROUNDS_ATLAS, 'myBackground.jpg');            thisObject.screenObjects.add(background);            levelsTitle = gameObject.add.sprite(235, 15, game.ImageAssetKeys.OTHER_GUI_ASSETS_ATLAS, 'levelsTitle.png');            thisObject.screenObjects.add(levelsTitle);            scoreBorder = gameObject.add.sprite(245, 378, game.ImageAssetKeys.STANDARD_BUTTONS_SHEET, 23);            thisObject.screenObjects.add(scoreBorder);            scoreText = gameObject.add.text(320, 400, game.getScore().toString(), game.Utility.getTextStyle17());            scoreText.anchor.set(0.5, 0.5);            thisObject.screenObjects.add(scoreText);            muteOnOffButton = gameObject.add.sprite(10, 10, game.ImageAssetKeys.OTHER_GUI_ASSETS_ATLAS, 'muteOff.png');            muteOnOffButton.inputEnabled = true;            muteOnOffButton.events.onInputDown.add(thisObject.muteOnOffSound, game);            thisObject.screenObjects.add(muteOnOffButton);                                                                    if (gameObject.sound.mute) {                muteOnOffButton.loadTexture(game.ImageAssetKeys.OTHER_GUI_ASSETS_ATLAS, 'muteOff.png');            } else {                muteOnOffButton.loadTexture(game.ImageAssetKeys.OTHER_GUI_ASSETS_ATLAS, 'muteOn.png');            }            mainMenuButton =                game.GoToScreen.Button(game.MainMenuScreen.KEY, thisObject.screenObjects, 470, 430, game.ImageAssetKeys.STANDARD_BUTTONS_SHEET, thisObject,                                        null, null, null, null, 3, 2, 2, 3);            thisObject.screenObjects.add(mainMenuButton);            saveButton = game.GameButton.GameButton(20, 430, game.ImageAssetKeys.STANDARD_BUTTONS_SHEET, windowObj, thisObject.saveGame,                                                    null, null, null, null, null, null, 13, 12, 12, 13);            thisObject.screenObjects.add(saveButton);            savedText = gameObject.add.text(280, 435, 'Saved!', game.Utility.getTextStyle17());            savedText.visible = false;            thisObject.screenObjects.add(savedText);            resetButton = game.GameButton.GameButton(20, 378, game.ImageAssetKeys.STANDARD_BUTTONS_SHEET, windowObj, thisObject.showResetWindow,                                                    null, null, null, null, null, null, 11, 10, 10, 11);            thisObject.screenObjects.add(resetButton);            resetWindow = gameObject.add.sprite(150, 170, game.ImageAssetKeys.OTHER_GUI_ASSETS_ATLAS, 'resetWindow.png');            resetWindow.visible = false;            thisObject.screenObjects.add(resetWindow);            submitButton = game.GameButton.GameButton(470, 378, game.ImageAssetKeys.STANDARD_BUTTONS_SHEET, windowObj, thisObject.submitScore,                                                    null, null, null, null, null, null, 15, 14, 14, 15);            submitButton.visible = false;            thisObject.screenObjects.add(submitButton);            cancelButton = game.GameButton.GameButton(335, 260, game.ImageAssetKeys.STANDARD_BUTTONS_SHEET, windowObj, thisObject.closeResetWindow,                                                    null, null, null, null, null, null, 29, 28, 28, 29);            cancelButton.visible = false;            thisObject.screenObjects.add(cancelButton);            resetGameButton = game.GameButton.GameButton(160, 260, game.ImageAssetKeys.STANDARD_BUTTONS_SHEET, windowObj, thisObject.resetGame,                                                    null, null, null, null, null, null, 11, 10, 10, 11);            resetGameButton.visible = false;            thisObject.screenObjects.add(resetGameButton);            game.fadeInGroup(thisObject.screenObjects);        },        shutdown: function () {            gameObject = null;            thisObject.preload = null;            thisObject.clearScreenState();        },        muteOnOffSound: function () {            var gameObject = this,                gameObject = gameObject.gameObject;            if (gameObject.sound.mute) {                muteOnOffButton.loadTexture(game.ImageAssetKeys.OTHER_GUI_ASSETS_ATLAS, 'muteOn.png');                gameObject.sound.mute = false;            } else {                muteOnOffButton.loadTexture(game.ImageAssetKeys.OTHER_GUI_ASSETS_ATLAS, 'muteOff.png');                gameObject.sound.mute = true;            }        },        getMuteOnOffBtn: function () {            return muteOnOffButton;        },        saveGame: function (windowParam) {            var windowObject = this;            windowObject.localStorage.setItem('score', windowObject.MyGame.getScore());            windowObject.localStorage.setItem('gameProgress', windowObject.MyGame.getGameProgress());            windowObject.localStorage.setItem('levelPointsArray', windowObject.MyGame.getLevelPointsArray());            savedText.visible = true;        },        showResetWindow: function () {            resetWindow.visible = true;            cancelButton.visible = true;            resetGameButton.visible = true;            resetButton.visible = false;            saveButton.visible = false;        },        submitScore: function () {                   },        closeResetWindow: function () {            resetWindow.visible = false;            cancelButton.visible = false;            resetGameButton.visible = false;            resetButton.visible = true;            saveButton.visible = true;        },        resetGame: function () {            var windowObject = this,                gameObject = windowObject.MyGame;            gameObject.clearLevelPointsArray();            windowObject.localStorage.clear();            windowObject.localStorage.setItem('firstVisit', true);            windowObject.localStorage.setItem('score', 0);            windowObject.localStorage.setItem('gameProgress', 1);            windowObject.localStorage.setItem('levelPointsArray', gameObject.getLevelPointsArray());            gameObject.loadStorageData();            gameObject.fadeOutGroup(gameObject.LevelsScreen.screenObjects).onComplete.add(function () {                var myGameObject = this;                myGameObject.state.start(gameTweenObject.LevelsScreen.KEY);                myGameObject.state.clearCurrentState();            }, gameObject);        }    };    }(window, window.MyGame)));